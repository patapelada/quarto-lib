name: Release and Publish

# on:
#   pull_request:
#     types: [closed]
#     branches: ["main"]
on: [push]

jobs:
  release:
    name: Release latest version
    runs-on: ubuntu-latest
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install PDM
        run: pip install pdm
      - name: Install ci dependencies
        run: pdm install -G ci

      # - name: Generate changelog
      #   id: git-cliff
      #   run: |
      #     pdm run git-cliff --verbose --bump -o CHANGELOG.md
      - name: Set tag env variable
        run: echo "NEW_TAG=$(pdm run git-cliff --bumped-version)" >> $GITHUB_ENV

      # - name: Commit to main
      #   run: |
      #     git checkout main
      #     git config user.name github-actions
      #     git config user.email github-actions@github.com
      #     git add CHANGELOG.md
      #     git commit -m "Update changelog"
      #     git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git main
      - name: Upload the release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.NEW_TAG }}
          generate_release_notes: true

  release-build:
    runs-on: ubuntu-latest
    needs:
      - release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install PDM
        run: pip install pdm
      - name: Install dependencies
        run: pdm install
      - name: Build package
        run: pdm build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
    environment:
      name: pypi
      url: https://pypi.org/p/quarto-lib
      #
      # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
      # ALTERNATIVE: exactly, uncomment the following line instead:
      # url: https://pypi.org/project/YOURPROJECT/${{ github.event.release.name }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
